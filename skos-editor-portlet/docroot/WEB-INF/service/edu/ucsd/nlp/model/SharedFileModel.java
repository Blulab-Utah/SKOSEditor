/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package edu.ucsd.nlp.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the SharedFile service. Represents a row in the &quot;SKOS_SharedFile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link edu.ucsd.nlp.model.impl.SharedFileModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link edu.ucsd.nlp.model.impl.SharedFileImpl}.
 * </p>
 *
 * @author http://nlp-app.ucsd.edu
 * @see SharedFile
 * @see edu.ucsd.nlp.model.impl.SharedFileImpl
 * @see edu.ucsd.nlp.model.impl.SharedFileModelImpl
 * @generated
 */
public interface SharedFileModel extends BaseModel<SharedFile> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a shared file model instance should use the {@link SharedFile} interface instead.
	 */

	/**
	 * Returns the primary key of this shared file.
	 *
	 * @return the primary key of this shared file
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this shared file.
	 *
	 * @param primaryKey the primary key of this shared file
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this shared file.
	 *
	 * @return the ID of this shared file
	 */
	public long getId();

	/**
	 * Sets the ID of this shared file.
	 *
	 * @param id the ID of this shared file
	 */
	public void setId(long id);

	/**
	 * Returns the skos file ID of this shared file.
	 *
	 * @return the skos file ID of this shared file
	 */
	public long getSkosFileId();

	/**
	 * Sets the skos file ID of this shared file.
	 *
	 * @param skosFileId the skos file ID of this shared file
	 */
	public void setSkosFileId(long skosFileId);

	/**
	 * Returns the shared by of this shared file.
	 *
	 * @return the shared by of this shared file
	 */
	public long getSharedBy();

	/**
	 * Sets the shared by of this shared file.
	 *
	 * @param sharedBy the shared by of this shared file
	 */
	public void setSharedBy(long sharedBy);

	/**
	 * Returns the shared with of this shared file.
	 *
	 * @return the shared with of this shared file
	 */
	public long getSharedWith();

	/**
	 * Sets the shared with of this shared file.
	 *
	 * @param sharedWith the shared with of this shared file
	 */
	public void setSharedWith(long sharedWith);

	/**
	 * Returns the shared on of this shared file.
	 *
	 * @return the shared on of this shared file
	 */
	public Date getSharedOn();

	/**
	 * Sets the shared on of this shared file.
	 *
	 * @param sharedOn the shared on of this shared file
	 */
	public void setSharedOn(Date sharedOn);

	/**
	 * Returns the status of this shared file.
	 *
	 * @return the status of this shared file
	 */
	public int getStatus();

	/**
	 * Sets the status of this shared file.
	 *
	 * @param status the status of this shared file
	 */
	public void setStatus(int status);

	/**
	 * Returns the access of this shared file.
	 *
	 * @return the access of this shared file
	 */
	public int getAccess();

	/**
	 * Sets the access of this shared file.
	 *
	 * @param access the access of this shared file
	 */
	public void setAccess(int access);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(SharedFile sharedFile);

	@Override
	public int hashCode();

	@Override
	public CacheModel<SharedFile> toCacheModel();

	@Override
	public SharedFile toEscapedModel();

	@Override
	public SharedFile toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}